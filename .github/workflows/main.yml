name: "CICD for Nginx webapp using Dockerfile" #Prakash Mahajan tag update

on: workflow_dispatch #tempory disable yaml
  # Triggers the workflow on pushes to the 'main' branch
  push:
    #branches: ["main"]   # unalbe to build run only github action if tag is add action will run 
    # Also runs on pushes with a tag starting with 'v1.'
    tags:
      #- 'v1.* '
       - 'v[0-9]+.[0-9]+.[0-9]+' #dynamic tagging
  # Triggers the workflow on pull requests targeting the 'main' branch
  #pull_request:
    #branches: ["main"]

permissions: 
  # Grants read permission to fetch the repository contents
  contents: read

jobs:
  nginx-image-build:
    runs-on: ubuntu-latest
    # Specifies the target environment for deployment (for tracking purposes)
    environment: production
    
    steps:
      - name: Checkout repository
        # Action to fetch the code from the repository
        uses: actions/checkout@v4 

      - name: Login to Docker Hub
        # Action to authenticate against Docker Hub using provided secrets
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKERHUB_TOKEN }} 
          
      - name: Setup Docker Buildx
        # Action to set up the necessary tools for multi-platform Docker builds
        uses: docker/setup-buildx-action@v3
        
      - name: Extract metadata for the Docker Image
        id: meta
        # Action that generates version tags and labels based on Git context
        uses: docker/metadata-action@v5
        with:
          # Defines the final image name structure (Username/ImageName)
          images: ${{ secrets.DOCKERHUB_USERNAME }}/nginx-ubuntu 
          
          tags: |
            # Tag 1: Uses the branch name (e.g., 'main')
            type=ref,event=branch
            # Tag 2: Uses semantic versioning for tags (e.g., 'v1.0.0' -> '1.0.0')
            type=semver,pattern={{version}}
            # Tag 3: Uses major and minor version (e.g., 'v1.0.0' -> '1.0')
            type=semver,pattern={{major}}.{{minor}}
            # Tag 4: Fix for 'latest' tag. Only generated when on the default branch ('main').
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            
      - name: Build Image and Push to Docker Hub
        # Action to perform the build and push steps
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true 
          # Uses the list of tags generated by the metadata step (e.g., 'main', 'latest', '1.0')
          tags: ${{ steps.meta.outputs.tags }}
          # Uses the labels generated by the metadata step (e.g., commit SHA, date)
          labels: ${{ steps.meta.outputs.labels }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/nginx-ubuntu'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          #vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'



#git tag 
#git tag v1.2.3
#git push origin --tag
#git tag -d v1.1.1
#git tag -a v1.2.3 -m "Release version 1.
