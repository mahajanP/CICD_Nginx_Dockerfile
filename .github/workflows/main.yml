name: "CICD for Nginx webapp using Dockerfile" #Prakash Mahajan

on:
  push:
    branches: ["main"]
    # To ignore paths on push, uncomment and correct the following section:
    # paths-ignore:
    #   - "src/"
    tags:
      - 'v1.*'
  pull_request:
    branches: ["main"]

permissions: 
  contents: read

jobs:
  nginx-image-build:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Recommended stable version

      - name: Login to Docker Hub
        uses: docker/login-action@v3 # Recommended stable version
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKERHUB_TOKEN }} 
          
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3 # Recommended stable version
        
      - name: Extract metadata for the Docker Image
        id: meta
        # Using the stable tag @v5
        uses: docker/metadata-action@v5
        with:
          # The image name is hardcoded as 'nginx-ubuntu' since 'env.respository' is undefined.
          images: ${{ secrets.DOCKERHUB_USERNAME }}/nginx-ubuntu 
          
          # FIX 3: Adding a condition to generate the 'latest' tag ONLY when 
          # the workflow is running on the 'main' branch (for pushes/tags).
          tags: |
            type=ref,event=branch # Generates tags like 'main'
            type=semver,pattern={{version}} # Generates tags like '1.0.0' or '1.0.0-beta'
            type=semver,pattern={{major}}.{{minor}} # Generates tags like '1.0'
            # ðŸš¨ NEW LINE: Set the 'latest' tag only if the ref is the 'main' branch
            type=raw,value=latest,enable={{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            
      - name: Build Image and Push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true 
          # Using the dynamic tags and labels generated by the metadata step
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
